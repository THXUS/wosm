/* File generated by the BNF Converter (bnfc 2.9.4). */

#ifndef PARSER_HEADER_FILE
#define PARSER_HEADER_FILE

#include<vector>
#include<string>
#include<cstdio>
#include "Absyn.H"


PROGRAM* pPROGRAM(FILE *inp);
PROGRAM* pPROGRAM(const char *str);
VARDECL* pVARDECL(FILE *inp);
VARDECL* pVARDECL(const char *str);
VAR* pVAR(FILE *inp);
VAR* pVAR(const char *str);
ListVAR* pListVAR(FILE *inp);
ListVAR* pListVAR(const char *str);
TYPE* pTYPE(FILE *inp);
TYPE* pTYPE(const char *str);
POINTER* pPOINTER(FILE *inp);
POINTER* pPOINTER(const char *str);
AST* pAST(FILE *inp);
AST* pAST(const char *str);
ListAST* pListAST(FILE *inp);
ListAST* pListAST(const char *str);
CONSTDECL* pCONSTDECL(FILE *inp);
CONSTDECL* pCONSTDECL(const char *str);
CONST* pCONST(FILE *inp);
CONST* pCONST(const char *str);
ListCONST* pListCONST(FILE *inp);
ListCONST* pListCONST(const char *str);
VALUE* pVALUE(FILE *inp);
VALUE* pVALUE(const char *str);
FUNCDECL* pFUNCDECL(FILE *inp);
FUNCDECL* pFUNCDECL(const char *str);
FUNCTION* pFUNCTION(FILE *inp);
FUNCTION* pFUNCTION(const char *str);
ListFUNCTION* pListFUNCTION(FILE *inp);
ListFUNCTION* pListFUNCTION(const char *str);
RETURN* pRETURN(FILE *inp);
RETURN* pRETURN(const char *str);
PARAM* pPARAM(FILE *inp);
PARAM* pPARAM(const char *str);
ListPARAM* pListPARAM(FILE *inp);
ListPARAM* pListPARAM(const char *str);
BLOCKPROG* pBLOCKPROG(FILE *inp);
BLOCKPROG* pBLOCKPROG(const char *str);
CMD* pCMD(FILE *inp);
CMD* pCMD(const char *str);
ListCMD* pListCMD(FILE *inp);
ListCMD* pListCMD(const char *str);
IF* pIF(FILE *inp);
IF* pIF(const char *str);
IFELSE* pIFELSE(FILE *inp);
IFELSE* pIFELSE(const char *str);
WHILE* pWHILE(FILE *inp);
WHILE* pWHILE(const char *str);
FOR* pFOR(FILE *inp);
FOR* pFOR(const char *str);
GOTO* pGOTO(FILE *inp);
GOTO* pGOTO(const char *str);
ASSIGMENT* pASSIGMENT(FILE *inp);
ASSIGMENT* pASSIGMENT(const char *str);
INCREMENT* pINCREMENT(FILE *inp);
INCREMENT* pINCREMENT(const char *str);
COND* pCOND(FILE *inp);
COND* pCOND(const char *str);
LOGICOP* pLOGICOP(FILE *inp);
LOGICOP* pLOGICOP(const char *str);
LOGICEXP* pLOGICEXP(FILE *inp);
LOGICEXP* pLOGICEXP(const char *str);
ListLOGICEXP* pListLOGICEXP(FILE *inp);
ListLOGICEXP* pListLOGICEXP(const char *str);
EXP* pEXP(FILE *inp);
EXP* pEXP(const char *str);
ARITOP* pARITOP(FILE *inp);
ARITOP* pARITOP(const char *str);
ARITEXP* pARITEXP(FILE *inp);
ARITEXP* pARITEXP(const char *str);
ListARITEXP* pListARITEXP(FILE *inp);
ListARITEXP* pListARITEXP(const char *str);


#endif
